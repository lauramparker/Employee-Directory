{"version":3,"sources":["components/EmployeeList.js","components/FilterName.js","components/Container.js","components/Row.js","utils/API.js","components/Filter.js","App.js","index.js"],"names":["EmployeeList","props","className","id","employees","map","employee","firstName","lastName","country","phone","cell","email","FilterName","htmlFor","onChange","handleChangeName","value","name","type","placeholder","onClick","Container","fluid","children","Row","axios","get","Filter","state","filterResults","didFilter","filterNameValue","getEmployeesList","API","then","data","results","first","last","nat","setState","catch","err","console","error","event","target","filterEmployees","evaluate","filter","includes","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"4MAsCeA,MAlCf,SAAsBC,GAClB,OACA,8BACI,wBAAOC,UAAU,QAAQC,GAAG,YAA5B,UACA,gCACI,+BACI,4CACA,2CACA,yCACA,uCACA,sCACA,4CAGR,gCACKF,EAAMG,UAAUC,KAAI,SAAAC,GACjB,OACA,+BACI,6BAAKA,EAASC,YACd,6BAAKD,EAASE,WACd,6BAAKF,EAASG,UACd,6BAAKH,EAASI,QACd,6BAAKJ,EAASK,OACd,6BAAKL,EAASM,sBCDnBC,MAvBf,SAAoBZ,GAChB,OACE,+BACE,sBAAKC,UAAU,aAAf,UACE,uBAAOY,QAAQ,SAAf,6CACA,uBACEC,SAAUd,EAAMe,iBAChBC,MAAOhB,EAAMgB,MACbC,KAAK,kBACLC,KAAK,OACLjB,UAAU,eACVkB,YAAY,OACZjB,GAAG,oBAEL,uBACA,wBAAQkB,QAASpB,EAAMG,UAAWF,UAAU,kBAA5C,iCCVKoB,MALf,SAAmBrB,GACf,OAAO,qBAAKC,UAAS,mBAAcD,EAAMsB,MAAQ,SAAW,IAArD,SACFtB,EAAMuB,YCEAC,MAJf,SAAaxB,GACT,OAAO,qBAAKC,UAAS,aAAQD,EAAMsB,MAAQ,SAAW,IAA/C,SAAsDtB,EAAMuB,Y,iBCDxD,EACH,WACR,OAAOE,IAAMC,IAAI,0CCiFNC,E,4MA9EXC,MAAQ,CACJzB,UAAW,GACX0B,cAAe,GACfC,WAAW,EACXC,gBAAiB,I,EAUrBC,iBAAmB,WACfC,IACCC,MAAK,YAAe,IACX/B,EADU,EAAXgC,KACkBC,QAAQhC,KAAI,SAAAC,GAC/B,MAAO,CACHC,UAAWD,EAASY,KAAKoB,MACzB9B,SAAUF,EAASY,KAAKqB,KACxB9B,QAASH,EAASkC,IAClB9B,MAAOJ,EAASI,MAChBC,KAAML,EAASK,KACfC,MAAON,EAASM,UAGxB,EAAK6B,SAAS,CACVrC,UAAU,YAAKA,GACf0B,cAAc,YAAK1B,QAG1BsC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,O,EAIhC3B,iBAAmB,SAAA8B,GACf,IAAM7B,EAAQ6B,EAAMC,OAAO9B,MACrBC,EAAO4B,EAAMC,OAAO7B,KAC1B,EAAKuB,SAAL,eACKvB,EAAOD,IAEZ,EAAK+B,mB,EAOTA,gBAAkB,WACd,IAAMC,EAAY,EAAKpB,MAAMzB,UAAW8C,QAAO,SAAC5C,GAAD,OACzCA,EAASC,WAAeD,EAASE,UAClC2C,SAAS,EAAKtB,MAAMG,oBACrB,EAAKS,SAAS,CAAErC,UAAW6C,K,uDA5CnC,WACIG,KAAKnB,qB,oBA+CT,WACI,OACI,eAAC,EAAD,WACI,oDACA,eAAC,EAAD,WACI,cAAC,EAAD,CACI7B,UAAWgD,KAAKvB,MAAMzB,YAE1B,cAAC,EAAD,CACIa,MAAOmC,KAAKvB,MAAMG,gBAClBjB,SAAUqC,KAAKpC,iBACfA,iBAAkBoC,KAAKpC,iBACvBc,cAAesB,KAAKvB,MAAMC,cAC1B1B,UAAWgD,KAAKvB,MAAMzB,sB,GAvEzBiD,aCGNC,MAPf,WAEE,OACM,cAAC,EAAD,K,MCDRC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3b073505.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\n//set up table that lists employees\r\nfunction EmployeeList(props) {\r\n    return (\r\n    <div>\r\n        <table className=\"table\" id=\"employees\">\r\n        <thead>\r\n            <tr>\r\n                <th>First Name</th>\r\n                <th>Last Name</th>\r\n                <th>Country</th>\r\n                <th>Phone</th>\r\n                <th>Cell</th>\r\n                <th>Email</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {props.employees.map(employee => { \r\n                return (\r\n                <tr>\r\n                    <td>{employee.firstName}</td> \r\n                    <td>{employee.lastName}</td>\r\n                    <td>{employee.country}</td>\r\n                    <td>{employee.phone}</td>\r\n                    <td>{employee.cell}</td>\r\n                    <td>{employee.email}</td>\r\n                </tr>\r\n                )\r\n            })\r\n            }\r\n        </tbody>\r\n        </table> \r\n    </div>\r\n    );\r\n}\r\n\r\nexport default EmployeeList;","import React from \"react\";\r\n\r\n\r\nfunction FilterName(props) {\r\n    return (\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"search\">Enter a Name to Filter Results:</label>\r\n          <input\r\n            onChange={props.handleChangeName}\r\n            value={props.value} // filterNameValue = props.filterNameValue\r\n            name=\"filterNameValue\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Name\"\r\n            id=\"filterNameValue\"\r\n          />\r\n          <br />\r\n          <button onClick={props.employees} className=\"btn btn-primary\">\r\n            See Directory\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n\r\nexport default FilterName;","import React from \"react\";\r\n\r\n\r\nfunction Container(props) { \r\n    return <div className={`container${props.fluid ? \"-fluid\" : \"\"}`}> \r\n        {props.children}</div>;\r\n\r\n}\r\nexport default Container;","import React from \"react\";\r\n\r\n//from MovieOMDB Activity\r\nfunction Row(props) {\r\n    return <div className={`row${props.fluid ? \"-fluid\" : \"\"}`}>{props.children}</div>;\r\n}\r\n\r\nexport default Row;","import axios from \"axios\";\r\n\r\n\r\nexport default {\r\n  getUsers: function() {\r\n    return axios.get(\"https://randomuser.me/api/?results=50\");\r\n  }\r\n};\r\n\r\n","import React, { Component } from 'react';\r\nimport EmployeeList from \"./EmployeeList\";\r\nimport FilterName from \"./FilterName\";\r\nimport Container from \"./Container\";\r\nimport Row from \"./Row\";\r\nimport API from \"../utils/API\";\r\n\r\nclass Filter extends Component {\r\n    state = {  \r\n        employees: [],\r\n        filterResults: [], //results of the filter\r\n        didFilter: true,\r\n        filterNameValue: \"\" //value of filter term for Name search\r\n    };\r\n\r\n\r\n    //When the component mounts, request the data from Random User in Utils/API, \r\n    componentDidMount() {\r\n        this.getEmployeesList()\r\n    };\r\n    \r\n    \r\n    getEmployeesList = () => {\r\n        API.getUsers()\r\n        .then(({ data }) => {\r\n            const employees = data.results.map(employee => {\r\n                return {\r\n                    firstName: employee.name.first,\r\n                    lastName: employee.name.last,\r\n                    country: employee.nat,\r\n                    phone: employee.phone,\r\n                    cell: employee.cell,\r\n                    email: employee.email,\r\n                }\r\n            });\r\n            this.setState({\r\n                employees: [...employees],\r\n                filterResults: [...employees]  //sets both state arrays (employees & filterResults equal to same original API call\r\n            })\r\n        })//should add sort function callback here\r\n        .catch(err => console.error(err));\r\n    };\r\n\r\n\r\n    handleChangeName = event => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n        this.filterEmployees();\r\n    };\r\n   \r\n\r\n    //if the user wants to search/filter the directory,\r\n    //List dynamically renders as user types in search\r\n\r\n    filterEmployees = () => {\r\n        const evaluate = (this.state.employees).filter((employee) =>\r\n            ((employee.firstName) || (employee.lastName)) \r\n            .includes(this.state.filterNameValue));\r\n            this.setState({ employees: evaluate})\r\n    };\r\n  \r\n\r\n    render() { \r\n        return ( \r\n            <Container>\r\n                <h1>Employee Directory</h1>\r\n                <Row>\r\n                    <EmployeeList \r\n                        employees={this.state.employees}\r\n                    />\r\n                    <FilterName\r\n                        value={this.state.filterNameValue}\r\n                        onChange={this.handleChangeName}\r\n                        handleChangeName={this.handleChangeName}\r\n                        filterResults={this.state.filterResults}\r\n                        employees={this.state.employees}\r\n                    />\r\n                </Row>\r\n            </Container>\r\n        ); \r\n    }\r\n}\r\n \r\nexport default Filter;","import React from \"react\";\r\nimport Filter from \"./components/Filter\";\r\n\r\nfunction App() {\r\n  \r\n  return (\r\n        <Filter />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}